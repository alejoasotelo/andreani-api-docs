"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1467],{31467:(e,t,o)=>{o.r(t),o.d(t,{createBrowserFetcher:()=>a});var n=o(91379);function a(e){return{async fetch(t,o){let a,r=new Headers;for(let e in o.bodyMediaType&&r.append("Content-Type",o.bodyMediaType),o.header){let t=o.header[e];t.length>0&&r.append(e,t.toString())}let i=o.proxyUrl?new URL(o.proxyUrl,window.location.origin):null;if("undefined"!=typeof document)for(let e in o.cookie){let t=o.cookie[e];t&&(document.cookie=[`${e}=${t}`,"HttpOnly",i&&i.origin!==window.location.origin&&`domain=${i.host}`,"path=/"].filter(Boolean).join(";"))}let d=(0,n.Z)(t,o.path,o.query);if(i&&(i.searchParams.append("url",d),d=i.toString()),o.bodyMediaType&&o.body){let t=e[o.bodyMediaType];if(!t)return{status:400,type:"text",data:`[Fumadocs] No adapter for ${o.bodyMediaType}, you need to specify one from 'createOpenAPI()'.`};a=await t.encode(o)}return fetch(d,{method:o.method,cache:"no-cache",headers:r,body:a,signal:AbortSignal.timeout(1e4)}).then(async e=>{let t,o,n=e.headers.get("Content-Type")??"";return n.startsWith("application/json")?(t="json",o=await e.json()):(t=n.startsWith("text/html")?"html":"text",o=await e.text()),{status:e.status,type:t,data:o}}).catch(e=>{let t=e instanceof Error?`[${e.name}] ${e.message}`:e.toString();return{status:400,type:"text",data:`Client side error: ${t}`}})}}}}}]);